
##  ##默认是开启的，这里关闭shrink，即不删除没有使用的类/成员-->
-dontshrink
## ##默认是开启的，这里关闭字节码级别的优化-->
-dontoptimize
####对于类成员的命名的混淆采取唯一策略-->
-useuniqueclassmembernames
##- 混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代-->
-adaptclassstrings 
-ignorewarnings
## 混淆时不生成大小写混合的类名，默认是可以大小写混合-->
-dontusemixedcaseclassnames
## This option will replace all strings in reflections method invocations with new class names.
##     For example, invokes Class.forName('className')-->
## -adaptclassstrings -->
## This option will save all original annotations and etc. Otherwise all we be removed from files.-->
## 不混淆所有特殊的类-->
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,
##    SourceFile,LineNumberTable,*Annotation*,EnclosingMethod
## This option will save all original names in interfaces (without obfuscate).-->
-keepnames interface **
## This option will save all original methods parameters in files defined in -keep sections,
#otherwise all parameter names will be obfuscate.-->
-keepparameternames
## -libraryjars ** -->
## This option will save all original class files (without obfuscate) but obfuscate all in domain package.-->
##-keep class !com.slm.proguard.example.spring.boot.domain.** { *; }-->
-keep class !cn.nkpro.** { *; }
-keep interface * extends * { *; }         ## 接口 -->
-keepclasseswithmembers,allowshrinking abstract class cn.nkpro.ts5.** { *; }
-keepclasseswithmembers,allowshrinking @cn.nkpro.ts5.Keep class cn.nkpro.** { *;} ## @Keep注解 -->
-keepclasseswithmembers,allowshrinking @org.springframework.stereotype.Component class cn.nkpro.ts5.** { *; }
-keepclasseswithmembers,allowshrinking @org.springframework.stereotype.Service class cn.nkpro.ts5.** { *; }
-keepclasseswithmembers,allowshrinking class cn.nkpro.**.gen.* { *; }


##                        -keep class cn.nkpro.ts5.** implements java.io.Serializable { *; }-->
##                        -keep class ** implements java.io.Serializable -->
##                        &lt;!&ndash; This option will save all original class files (without obfuscate) in service package&ndash;&gt;-->
##                        &lt;!&ndash;-keep class com.slm.proguard.example.spring.boot.service { *; }&ndash;&gt;-->
##                        &lt;!&ndash; This option will save all original interfaces files (without obfuscate) in all packages.&ndash;&gt;-->
##                        &lt;!&ndash; -keep @org.springframework.stereotype.Service class * &ndash;&gt;-->
##                        &lt;!&ndash; This option will save all original defined annotations in all class in all packages.&ndash;&gt;-->
##                        -keepclassmembers class * {-->
##                            &lt;!&ndash; @org.springframework.beans.factory.annotation.Autowired *; &ndash;&gt;-->
##                            @org.springframework.beans.factory.annotation.Value *;-->
##                            }-->
##                        -->